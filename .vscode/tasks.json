{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build Plenoxels Package",
            "type": "shell",
            "command": "python",
            "args": [
                "setup.py",
                "build"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Build CUDA Extensions",
            "type": "shell",
            "command": "python",
            "args": [
                "setup.py",
                "build_ext",
                "--inplace"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Install Package (Development)",
            "type": "shell",
            "command": "pip",
            "args": [
                "install",
                "-e",
                "."
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Run Plenoxels Tests",
            "type": "shell",
            "command": "python",
            "args": [
                "-m",
                "pytest",
                "tests/nerfs/test_plenoxels*.py",
                "-v"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Run All Tests",
            "type": "shell",
            "command": "python",
            "args": [
                "-m",
                "pytest",
                "tests/",
                "-v"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Format Code (Black)",
            "type": "shell",
            "command": "black",
            "args": [
                "src/",
                "tests/",
                "demos/",
                "examples/"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Check Code Style (Flake8)",
            "type": "shell",
            "command": "flake8",
            "args": [
                "src/",
                "--max-line-length=88"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Run Plenoxels Demo",
            "type": "shell",
            "command": "python",
            "args": [
                "demos/demo_plenoxels.py"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Check Release Readiness",
            "type": "shell",
            "command": "python",
            "args": [
                "check_release_readiness.py"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Generate Documentation",
            "type": "shell",
            "command": "python",
            "args": [
                "generate_api_docs.py"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Clean Build Artifacts",
            "type": "shell",
            "command": "python",
            "args": [
                "setup.py",
                "clean",
                "--all"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        }
    ]
}